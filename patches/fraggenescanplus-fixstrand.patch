diff -Nur FragGeneScanPlus.orig/hmm_lib.c FragGeneScanPlus/hmm_lib.c
--- FragGeneScanPlus.orig/hmm_lib.c	2017-07-24 11:05:11.415947000 +0200
+++ FragGeneScanPlus/hmm_lib.c	2017-07-24 11:11:48.786618000 +0200
@@ -1131,14 +1131,76 @@
 
 }
 
+
 void print_outputs(int codon_start, int start_t, int end_t, int frame, char* output_buffer, char* aa_buffer, char* dna_buffer,
                    char* sequence_head_short, char* dna, char* dna1, char* dna_f, char* dna_f1, char* protein,
                    int* insert, int* c_delete, int insert_id, int delete_id, int format, char* temp_str_ptr, unsigned int multiple) {
 
     int i;
-    char tab[] = "\t";
 
+    if (codon_start != 1 && codon_start != -1)
+        return;
+
+    if (codon_start == 1)
+        sprintf(temp_str_ptr, "%d\t%d\t+\t%d\t", start_t, end_t, frame);
+    else
+        sprintf(temp_str_ptr, "%d\t%d\t-\t%d\t", start_t, end_t, frame);
+
+    strcat(output_buffer, temp_str_ptr);
+    sprintf(temp_str_ptr, "I:");
+    strcat(output_buffer, temp_str_ptr);
+
+    for (i = 0; i < insert_id; i++) {
+        sprintf(temp_str_ptr, "%d,", insert[i]);
+        strcat(output_buffer, temp_str_ptr);
+    }
+
+    sprintf(temp_str_ptr, "\tD:");
+    strcat(output_buffer, temp_str_ptr);
+
+    for (i = 0; i < delete_id; i++) {
+        sprintf(temp_str_ptr, "%d,", c_delete[i]);
+        strcat(output_buffer, temp_str_ptr);
+    }
+
+    sprintf(temp_str_ptr, "\n");
+    strcat(output_buffer, temp_str_ptr);
+
+    if (codon_start == 1)
+        sprintf(temp_str_ptr, "%s_%d_%d_+\n", sequence_head_short, start_t, end_t);
+    else
+        sprintf(temp_str_ptr, "%s_%d_%d_-\n", sequence_head_short, start_t, end_t);
+
+    if(multiple)  strcat(aa_buffer, "\t");
 
+    strcat(aa_buffer, temp_str_ptr);
+
+    if (codon_start == 1)
+        sprintf(temp_str_ptr, "%s_%d_%d_+\n", sequence_head_short, start_t, end_t);
+    else
+        sprintf(temp_str_ptr, "%s_%d_%d_-\n", sequence_head_short, start_t, end_t);
+
+    if(multiple)  strcat(dna_buffer, "\t");
+
+    strcat(dna_buffer, temp_str_ptr);
+
+    get_protein(dna,protein,1);
+    sprintf(temp_str_ptr, "%s\n", protein);
+    strcat(aa_buffer, temp_str_ptr);
+    if (format == 0)
+        sprintf(temp_str_ptr, "%s\n", dna);
+    else if (format == 1)
+        sprintf(temp_str_ptr, "%s\n", dna_f);
+
+    strcat(dna_buffer, temp_str_ptr);
+}
+
+void Xprint_outputs(int codon_start, int start_t, int end_t, int frame, char* output_buffer, char* aa_buffer, char* dna_buffer,
+                   char* sequence_head_short, char* dna, char* dna1, char* dna_f, char* dna_f1, char* protein,
+                   int* insert, int* c_delete, int insert_id, int delete_id, int format, char* temp_str_ptr, unsigned int multiple) {
+
+    int i;
+    char tab[] = "\t";
 
 
     if (codon_start == 1) {
@@ -1214,7 +1276,7 @@
         strcat(aa_buffer, temp_str_ptr);
 
 
-        sprintf(temp_str_ptr, "%s_%d_%d_+\n", sequence_head_short, start_t, end_t);
+        sprintf(temp_str_ptr, "%s_%d_%d_-\n", sequence_head_short, start_t, end_t);
         strcat(dna_buffer, temp_str_ptr);
 
         get_protein(dna,protein,1);
diff -Nur FragGeneScanPlus.orig/run_hmm.c FragGeneScanPlus/run_hmm.c
--- FragGeneScanPlus.orig/run_hmm.c	2017-07-24 11:18:34.509404000 +0200
+++ FragGeneScanPlus/run_hmm.c	2017-07-24 11:11:48.794617000 +0200
@@ -18,6 +18,8 @@
 unsigned int MAX_SEQS_PER_BUFFER;
 unsigned int num_reads_flag = 0;
 
+int errno;
+
 int max_mem = 0;
 
 pthread_t writer_thread;
@@ -25,6 +27,7 @@
 off_t stopped_at_fpos; // tracks how far we've read in the input
 
 long writer_counter = 0;
+long dna_writer_counter = 0;
 long read_counter = 0;
 long read_counter1 = 0;
 long work_counter = 0;
@@ -564,23 +567,31 @@
     }
 }
 
-void writeOutputFiles(FILE* aa_outfile_fp, thread_data* td, unsigned int buffer) {
+void writeOutputFiles(FILE* dna_outfile_fp, FILE* aa_outfile_fp, thread_data* td, unsigned int buffer) {
     if (output_meta) {
         writeMeta();
     }
     if (output_dna) {
-        writeDNA();
+        writeDNA(dna_outfile_fp, td, buffer);
     }
     writeAminoAcids(aa_outfile_fp, td, buffer);
     num_writes++;
     if (verbose) fprintf(stderr, "INFO: Wrote results for thread %d, buffer %d.\n", td->id, buffer );
 }
 
-void writeDNA() {
-    dna_outfile_fp = fopen(dna_file, "a");
-    if (!dna_outfile_fp) {
-        fprintf(stderr, "ERROR: Could not open dna output file %s for writing!\n", dna_file);
-        exit(EXIT_FAILURE);
+void writeDNA(FILE* dna_outfile_fp, thread_data* td, unsigned int buffer) {
+    int j;
+    for(j = 0; j < td->output_num_sequences[buffer]; j++) {
+        dna_writer_counter++;
+        char *ptrc;
+        if(td->dna_buffer[buffer][j][0]!=0) {
+            ptrc=td->dna_buffer[buffer][j];
+            while(*ptrc!='\0') {
+                if(*ptrc=='\t') *ptrc='>';
+                ptrc++;
+            }
+            fprintf(dna_outfile_fp, ">%s", td->dna_buffer[buffer][j]);
+        }
     }
 }
 
@@ -614,7 +625,7 @@
     }
 }
 
-FILE* openFilePointers() {
+FILE* openAAFilePointer() {
 
     FILE* aa_outfile_fp;
     if(strcmp(out_file, "stdout") == 0) {
@@ -627,15 +638,31 @@
         fprintf(stderr, "ERROR: Could not open aa output file %s for writing!\n", aa_file);
         exit(EXIT_FAILURE);
     }
-
     return aa_outfile_fp;
 }
 
+FILE* openDNAFilePointer() {
+
+    FILE* dna_outfile_fp;
+    if (output_dna) {
+        dna_outfile_fp = fopen(dna_file, "a");
+        if(!dna_outfile_fp) {
+            fprintf(stderr, "ERROR: Could not open DNA output file %s for writing!\n", dna_file);
+            exit(EXIT_FAILURE);
+        }
+    }
+
+    return dna_outfile_fp;
+}
+
+
 void closeFilePointers( FILE** aa_outfile_fp, FILE** outfile_fp, FILE** dna_outfile_fp ) {
 
     fclose(*aa_outfile_fp);
     if (output_meta) fclose(*outfile_fp);
-    if (output_dna) fclose(*dna_outfile_fp);
+    if (output_dna) {
+        fclose(*dna_outfile_fp);
+    }
 
     *aa_outfile_fp = NULL;
     *outfile_fp = NULL;
@@ -645,7 +672,11 @@
 void* writerThread(void* args) {
 
     int j;
-    FILE* aa_outfile_fp = openFilePointers();
+    FILE* aa_outfile_fp = openAAFilePointer();
+    FILE* dna_outfile_fp = NULL;
+    if (output_dna) {
+        dna_outfile_fp = openDNAFilePointer();
+    }
 
     while(1) {
 
@@ -664,7 +695,7 @@
             thread_data* td = temp->td;
             unsigned int buffer = temp->buffer;
 
-            writeOutputFiles(aa_outfile_fp, td, buffer);
+            writeOutputFiles(dna_outfile_fp, aa_outfile_fp, td, buffer);
 
             sem_post(sema_R);
             sem_post(td->sema_w);
