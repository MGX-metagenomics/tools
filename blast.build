
. ./tools.config

set -e


VERSION=2.15.0
LMDBVER=0.9.31

wget -q https://github.com/LMDB/lmdb/archive/LMDB_${LMDBVER}.tar.gz
tar xzf LMDB_${LMDBVER}.tar.gz
rm LMDB_${LMDBVER}.tar.gz
cd lmdb-LMDB_${LMDBVER}/libraries/liblmdb/
make ${MAKE_FLAGS}
make prefix=$PREFIX install
cd ../../..
rm -rf lmdb-LMDB_${LMDBVER}

wget -q https://ftp.ncbi.nih.gov/blast/executables/blast+/${VERSION}/ncbi-blast-${VERSION}+-src.tar.gz
tar xzf ncbi-blast-${VERSION}+-src.tar.gz
rm ncbi-blast-${VERSION}+-src.tar.gz
cd ncbi-blast-${VERSION}+-src/c++

patch -p 2 < ../../patches/blast_disable_reporting.patch
patch -p 2 < ../../patches/blast-check-instdir.patch

LIB_INSTALL_DIR=$PREFIX/lib/ncbi-blast+

export AR="ar rcs"

./configure --prefix=${PREFIX} \
   --libdir=${PREFIX}/lib/ncbi-blast+ \
   --with-lmdb=$PREFIX \
   --with-bin-release \
   --with-64 \
   --with-mt \
   --with-dll \
   --with-openmp \
   --without-autodep \
   --without-makefile-auto-update \
   --with-flat-makefile \
   --without-caution \
   --without-lzo \
   --without-debug \
   --with-strip \
   --without-krb5 \
   --without-gnutls \
   --without-boost \
   --without-fastcgi \
   --without-fastcgipp

apps="blastp.exe blastn.exe blastx.exe tblastn.exe tblastx.exe"
apps="$apps makeblastdb.exe"
apps="$apps blastdbcmd.exe blastdb_aliastool.exe"
apps="$apps blastdbcheck.exe blast_formatter.exe"
cd ReleaseMT

mkdir -p $LIB_INSTALL_DIR

if [ ! -e $LIB_INSTALL_DIR/lib ]; then
    ln -s `pwd`/lib $LIB_INSTALL_DIR
fi

cd build

# parallel builds fail, so -j1
make -j1 -f Makefile.flat $apps
rm -rf $LIB_INSTALL_DIR/lib

mkdir -p $PREFIX/bin $PREFIX/lib/ncbi-blast+
chmod +x ../bin/*
cp ../bin/* $PREFIX/bin/
cp ../lib/* $PREFIX/lib/ncbi-blast+/


for file in legacy_blast.pl get_species_taxids.sh datatool cleanup-blastdb-volumes.py update_blastdb.pl test_pcre run_with_lock project_tree_builder; do
   rm -f ${PREFIX}/bin/${file}
done

cd ../../../..
rm -rf ncbi-blast-${VERSION}+-src

rm -f ${PREFIX}/include/lmdb.h
rm -f ${PREFIX}/share/man/man1/mdb_*
rm -f ${PREFIX}/bin/mdb_{copy,dump,load,stat}
rm -f ${PREFIX}/bin/lmdbxx_sample
rm -f ${PREFIX}/lib/liblmdb.a


